{"version":3,"file":"index-bundle.js","mappings":"mBAAA,IAAIA,EAuBJA,EApBkB,WACd,IAAMC,EAAYC,aAAaC,QAAQ,SAEvC,IACI,OAAOF,EAAYG,KAAKC,MAAMJ,GAAa,EAC/C,CAAE,MAAOK,GACL,MAAO,EACX,CAQJ,CAKQC,GCrBRC,QAAQC,IDmBeT,E","sources":["webpack://boilerplate/./src/notes.js","webpack://boilerplate/./src/index.js"],"sourcesContent":["let notes = []\r\n\r\n// Read existing notes from local storage\r\nconst loadNotes = () => { // This is an arrow function\r\n    const notesJSON = localStorage.getItem('notes')\r\n\r\n    try{\r\n        return notesJSON ? JSON.parse(notesJSON) : [] // Conditional (ternary) operator \"?\"\r\n    } catch (e){\r\n        return []\r\n    }\r\n    \r\n    //Old way before the conditional operator\r\n    // if (notesJSON !== null){\r\n    //     return JSON.parse(notesJSON)\r\n    // } else {\r\n    //     return []\r\n    // }\r\n}\r\n\r\n// Expose notes from module\r\nconst getNotes = () => notes\r\n\r\nnotes = loadNotes()\r\n\r\nexport {getNotes}","import { getNotes } from './notes.js'\r\n\r\nconsole.log(getNotes())"],"names":["notes","notesJSON","localStorage","getItem","JSON","parse","e","loadNotes","console","log"],"sourceRoot":""}